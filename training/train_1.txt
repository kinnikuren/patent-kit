DETAILED ACTION 
Status 
1.
The present application, filed on or after March 16, 2013, is being examined under the first inventor to file provisions of the AIA.
2.
Claims 1-20 have been submitted for examination and are pending further prosecution by the United States Patent & Trademark Office.
Claim Objections 
3.
Claim 14 is objected to because of a comma near the end of line 8 (after "actors").
It is suggested Applicants remove this comma.
4.
Appropriate correction is required.
Claim Rejections - 35 USC § 101 
5.
35 U.S.C. 101 reads as follows: Whoever invents or discovers any new and useful process, machine, manufacture, or composition of matter, or any new and useful improvement thereof, may obtain a patent therefor, subject to the conditions and requirements of this title.
6.
Claims 1-3, 7 and 13-15 are rejected under 35 U.S.C. 101 because the claimed invention is directed to a judicial exception (i.e., a law of nature, a natural phenomenon, or an abstract idea) without significantly more.
Claim 1 recites a method of obtaining first and second input data associated with procedures defining a series of messages exchanged between actors, generating control data based on the first and second input data, and controlling the procedures using the control data.
Application/Control Number: 15/694,060 
Page 3 
Art Unit: 2192 
Claims directed to merely collecting and analyzing information, without significantly more, have been recognized by courts as abstract ideas.
For example, in the case Electric Power Group, LLC v. Alstom, S.A., 830 F.3d 1350, 119 USPQ2d 1739 (Fed. Cir. 2016)), the court stated that
"Accordingly, we have treated collecting information, including when limited to particular content (which does not change its character as information), as within the realm of abstract ideas...In a similar vein, we have treated analyzing information by steps people go through in their minds, or by mathematical algorithms, without more, as essentially mental processes within the abstract-idea category.” (pg. 7 of the decision).
A review of claim 1 reveals that the following limitations recite the collection and analysis of information without significantly more and, therefore, are directed to an abstract idea: (1) obtaining first input data comprising information regarding a plurality of procedures defining a series of messages between a first actor and at least one second actor from among the plurality of actors; (2) obtaining second input data comprising information regarding relationships between the plurality of procedures; (3) generating control data by interpreting the first and second input data; and (4) controlling the plurality of procedures by processing the series of messages using the control data.
Since claim 1 does not include an inventive concept sufficient to amount to significantly more than the judicial exception, the claim is ineligible.
Dependent claims 2, 3, 7 and 13 are also rejected as the respective limitations simply elaborate on the type of structures recited in claim 1 without also reciting an inventive concept sufficient to amount to significantly more than the abstract idea.
Claim 14 recites a system for obtaining first input data associated with procedures defining a series of messages exchanged between actors, generating control data, obtaining function data, and controlling the procedures using the control data and the function data.
Claims directed to merely collecting and analyzing information, without significantly more, have been recognized by courts as abstract ideas.
For example, in the case Electric Power Group, LLC v. Alstom, S.A., 830 F.3d 1350, 119 USPQ2d 1739 (Fed. Cir. 2016)), the court stated that "Accordingly, we have treated collecting information, including when limited to particular content (which does not change its character as information), as within the realm of abstract ideas...In a similar vein, we have treated analyzing information by steps people go through in their minds, or by mathematical algorithms, without more, as essentially mental processes within the abstract-idea category.” (pg. 7 of the decision).
A review of claim 14 reveals that the following limitations recite the collection and analysis of information without significantly more and, therefore, are directed to an abstract idea: (1) obtaining first input data by displaying at least one of a plurality of procedures as a message sequence chart (MSC), wherein the first input data comprises information regarding the plurality of procedures defining a series of messages between a first actor and at least one second actor from among the plurality of actors; (2  generating control data using the first input data; (3) obtaining function data comprising information regarding operations in which the plurality of procedures process the series of messages; and (4) controlling the plurality of procedures by processing the series of messages using the control data and the function data.
While claim 14 also recites performing the recited operations using a processor, the recitation amounts to a generic computer implementation for applying the abstract idea that is insufficient to transform the abstract idea into allowable subject matter.
Since claim 14 does not include an inventive concept sufficient to amount to significantly more than the judicial exception, the claim is ineligible.
Dependent claim 15 is also rejected as the claim merely recites an additional step of obtaining information in the form of test data without also reciting an inventive concept sufficient to amount to significantly more than the abstract idea.
Claim Rejections - 35 USC § 102 
7.
The following is a quotation of the appropriate paragraphs of 35 U.S.C. 102 that form the basis for the rejections under this section made in this Office action: A person shall be entitled to a patent unless — (a)(1) the claimed invention was patented, described in a printed publication, or in public use, on sale or otherwise available to the public before the effective filing date of the claimed invention.
8.
Claims 1-4 and 6-15 are rejected under 35 U.S.C. 102(a)(1) as being anticipated by US 2006/0059444 AI - hereinafter "Murthy".
With respect to claim 1, Murthy teaches, A method of developing software comprising a plurality of actors executable in parallel, the methed being implemented by a computing system and comprising: - Fig. 2. obtaining first input data comprising information regarding a plurality of procedures - "The designer may also use the development tool to generate granular message diagrams. Granular message diagrams include processes and messages. The designer may createApplication/Control Number: 15/694,060 Page 6 Art Unit: 2192 a granular message diagram by drawing processes using shapes with lines extending from each shape...Furthermore, processes and messages may be labeled (first input data) by the designer.” [0032].  "As used herein, a scenario (procedure) represents a particular order and combination of messages communicated between processes." [0039]. Thus, the message labels (first input data) would identify the scenarios (procedures); defining a series of messages between a first actor and at least one second actor from among the plurality of actors; - "As used herein, a scenario represents a particular order and combination of messages communicated between processes (actors)." [0039]. obtaining second input data comprising information regarding relationships between the plurality of procedures; - "As discussed above, a long scenario may be chopped or divided into constituent parts according to the inputs in areas 146 and 148. Development tool 48 may separate a long scenario at the node (second input data) identified in area 146. Furthermore, a chop link may be identified in area 148 to determine a minimum length of constituent scenarios (procedures)." [0084]; Fig. 4B. generating control data by interpreting the first and second input data; - "Development tool 48 generates interactor code (control data) for validating device under test 16 using the identified scenarios at step 332." [0115]; Figs. 4B & 7. As noted above, scenarios contain message labels (first input data) and shared nodes (second input data). and controlling the plurality of procedures by processing the series of messages using the control data. - "Specifically, for any particular scenario (procedure), the interactor code (control data) may receive all of the messages sent by the transmit process, and the interactor code may send all messages received by the receiving process. [0038]Application/Control Number: 15/694,060 Page 7 Art Unit: 2192 With respect to claim 2, Murthy teaches, wherein the first input data comprises information regarding a series of messages defined by each of the plurality of procedures, and the information regarding the series of messages comprises at least one of...names of the messages. - "The designer may create a granular message diagram by drawing processes using shapes with lines extending from each shape...Furthermore, processes and messages may be labeled (first input data/names) by the designer." [0032].
With respect to claim 3, Murthy teaches, wherein a type of each of the series of messages is...an arbitrary message. - "For transmit process 202 and receive process 204, each event associated with the process line is one of three types. For transmit process 202, these types are a message send event, a timer initiation event, and a timeout signal reception event. For receive process 204, these types are a message receive event (arbitrary message), a timer initiation event, and a timeout signal reception event.” [0106] 
With respect to claim 4, Murthy teaches, determining a type of a message received by the first actor from the at least one second actor; - User interface process 70 (first actor) receives an Insert_Card message (type) from ATM process 72 (second actor) [0061-0062]; Fig.
3B controlling a new procedure using the second input data when the type of the message is the procedure trigger message; - The Card_ Inserted and PIN messages can be part of a scenario (new procedure) [0061-0062]; Fig. 3B. The messages are sent to ATM process 72Application/Control Number: 15/694,060 Page 8 Art Unit: 2192 in response to the Insert_Card message (procedure trigger message) [0061-0062]; Fig. 3B. Logically, Card_Insert/PIN messages (new procedure) can share a common node/granular message diagram (second input data) with a scenario featuring PIN_ Verify [0084]; Figs. 3B & 4B. and processing the message based on at least one procedure being performed when the type of the message is...the arbitrary message. - Murthy was mapped to the procedure trigger message option.
With respect to claim 6, Murthy teaches, wherein obtaining the first input data comprises: displaying at least one of the plurality of procedures as a message sequence chart (MSC); - "The designer may also use the development tool to generate granular message diagrams (message sequence chart). Granular message diagrams include processes and messages. The designer may create a granular message diagram by drawing processes using shapes with lines extending from each shape...Furthermore, processes and messages may be labeled (first input data) by the designer.” [0032]. "As used herein, a scenario (procedure) represents a particular order and combination of messages communicated between processes." [0039] changing the MSC in response to a user input; and extracting the first input data from the changed MSC. - "To draw a representation of a message (changing the MSC), a user may select button 174. A dialog box may accept a name (first input data) for the message being illustrated, and the user may be able to indicate between which processes the message will be communicated.” [0090]; Fig. 4C. "Development tool 48 generates interactor code for validatingApplication/Control Number: 15/694,060 Page 9 Art Unit: 2192 device under test 16 using the identified scenarios at step 332." [0115].  Logically, the interactor code would contain the message names/labels (first input data). With respect to claim 7, Murthy teaches, wherein the control data has a tree structure comprising nodes corresponding to operations in which the first actor processes messages. - "Given a particular directed graph (tree structure), development tool 48 generates interactor code (control data) to function as the outside world to communicate with the system specified in the directed graph.” [0083].  "Note that each granular message diagram represented by a box in directed graph 60 may utilize the same set of processes.” [0060]
With respect to claim 8, Murthy teaches, obtaining test data, comprising information regarding a test case for defining a series of test messages between the first actor and the at least one second actor, to test the plurality of procedures; - "As used herein, a message diagram (test data) includes any graphical representation of the communication of messages between processes (actors).” [0028]; "The message diagrams may also be used to identify scenarios (procedures) to be tested using the state machines." [0005].  A particular sequence of messages used for testing is interpreted as a test case. obtaining test configuration data for configuring a test flow; - "Messages may be communicated through signal interface 14 between validation device 12 and device under test 16 to determine whether device under test 16 transmits and receives messages according to theApplication/Control Number: 15/694,060 Page 10 Art Unit: 2192 specification (test configuration data) as the specification is defined in the message diagram.” [0042] and generating test result data by testing the first actor using the control data, the test data, and the test configuration data. - "At step 334, validation device 12 tests an implementation of the design using the interactor code (control data). Messages may be communicated to the implementation according the directed graph and granular message diagrams. Messages may also be received from the implementation. Analysis module 58 analyzes the test results at step 336. " [0116]; Fig. 7. The test results would be generated by testing a first process (first actor) within a scenario using a message diagram (test data) that defines a specification (test configuration data).
With respect to claim 9, Murthy teaches, wherein the test data comprises information regarding parameters of at least one of the test messages. - "As used herein, a message diagram (test data) includes any graphical representation of the communication of messages between processes.” [0028]; "As illustrated, timeout constraints 182 (parameters) have been included in the illustrated granular message diagram." [0093]; Fig. 4C 
With respect to claim 10, Murthy teaches, displaying the test data as an MSC; - "As used herein, a message diagram (test data) includes any graphical representation of the communication of messages between processes (actors)." [0028]; changing the MSC in response to a user input; - "The designer may create a granular message diagram by drawing processes using shapes with lines extending from each shape." [0032].  Logically, the diagram can be edited. and extracting the test data from the changed MSC. - "Granular message diagram database 52 stores granular message diagrams describing relationships between processes and messages communicated between the processes." [0049].  Logically, the edited diagrams would be extracted from memory for storage in the database.
With respect to claim 11, Murthy teaches, generating at least one stub actor corresponding to the at least one second actor using the test data, - "The designer may create a granular message diagram (test data) by drawing processes (stub/second actor) using shapes with lines extending from each shape." [0032] wherein, in generating the test result data, the test result data is generated by further testing the first actor based on the at least one stub actor. - "At step 334, validation device 12 tests an implementation of the design using the interactor code. Messages may be communicated to the implementation according the directed graph and granular message diagrams. Messages may also be received from the implementation. Analysis module 58 analyzes the test results at step 336. " [0116]; Fig. 7. Logically, the test results could be generated by testing processes (stub/second actor and first actor) drawn by the designer.
With respect to claim 12, Murthy teaches,Application/Control Number: 15/694,060 Page 12 Art Unit: 2192 wherein the test result data comprises log data, - "Test results and the analysis of the test results may be outputted at step 338. For example, the test results and analysis may be output by development tool 48 to a user for further analysis.” [0116].  The outputted test results are interpreted as the log data. the method further comprising: extracting an MSC from the log data; and displaying the extracted MSC. - "A high level of abstraction may be achieved by validation device 12 making a development tool available to a designer for capturing designs using message diagrams.” [0028] Logically, the designer can display a message diagram associated with the outputted test results.
With respect to claim 13, Murthy teaches, wherein each of the plurality of actors is...a process. - "As used herein, a scenario represents a particular order and combination of messages communicated between processes (actors)." [0039].
With respect to claim 14, Murthy teaches, A computing system for developing software comprising a plurality of actors that are executable in parallel, the computing system comprising at least one processor and a memory, wherein the af least one precesser is configured te perform operations comprising: - Fig. 2. obtaining first input data by displaying at least one of a plurality of procedures as a message sequence chart (MSC), - "The designer may also use the development tool to generate granular message diagrams (message sequence chart). Granular message diagrams includeApplication/Control Number: 15/694,060 Page 13 Art Unit: 2192 processes and messages. The designer may create a granular message diagram by drawing processes using shapes with lines extending from each shape...Furthermore, processes and messages may be labeled (first input data) by the designer.” [0032].  "As used herein, a scenario (procedure) represents a particular order and combination of messages communicated between processes." [0039]; wherein the first input data comprises information regarding the plurality of procedures - Thus, the message labels (first input data) would identify the scenarios; defining a series of messages between a first actor and at least one second actor from among the plurality of actors; - "As used herein, a scenario (procedure) represents a particular order and combination of messages communicated between processes (actors)." [0039]. generating control data using the first input data; - "Development tool 48 generates interactor code (control data) for validating device under test 16 using the identified scenarios at step 332." [0115]; Figs. 4B & 7. As noted above, scenarios contain message labels (first input data). obtaining function data comprising information regarding operations in which the plurality of procedures process the series of messages; - "To generate interactor code, a user of validation device 12 may identify a module (function data) to fulfill the role (operations) of the transmitting process and a second module to fulfill the role of a receiving process. According to particular embodiments, using these inputs, validation device 12 may generate interactor code that may function as the outside world to communicate with the system specified in the message diagram. Specifically, for any particular scenario (procedure), the interactor code may receive all of the messages sent by the transmit process, and the interactor code may send all messagesreceived by the receiving process." [0038] Thus, messages transmitted as part of a scenario would, effectively, be processed by the scenario. and controlling the plurality of procedures by processing the series of messages using the control data and the function data. - "To generate interactor code, a user of validation device 12 may identify a module (function data) to fulfill the role of the transmitting process and a second module to fulfill the role of a receiving process. According to particular embodiments, using these inputs, validation device 12 may generate interactor code that may function as the outside world to communicate with the system specified in the message diagram. "Specifically, for any particular scenario (procedure), the interactor code (control data) may receive all of the messages sent by the transmit process, and the interactor code may send all messages received by the receiving process. [0038]
With respect to claim 15, Murthy teaches, wherein, in order to receive an input of a test case defining a series of test messages between the first actor and the at least one second actor from a user to test the plurality of procedures, the at least one processor further performs an operation for obtaining test data by displaying the series of test messages as an MSC. - "A high level of abstraction may be achieved by validation device 12 making a development tool available to a designer for capturing designs using message diagrams. As used herein, a message diagram (test data) includes any graphical representation of the communication of messages between processes (actors)." [0028]; "The message diagrams may also be used to identify scenarios (procedures) to be tested using the state machines." [0005].  A particular sequence of messages used for testing is interpreted as a test case.
Claim Rejections - 35 USC § 103 
9.
The following is a quotation of 35 U.S.C. 103 which forms the basis for all obviousness rejections set forth in this Office action: A patent for a claimed invention may not be obtained, notwithstanding that the claimed invention is not identically disclosed as set forth in section 102 of this title, if the differences between the claimed invention and the prior art are such that the claimed invention as a whole would have been obvious before the effective filing date of the claimed invention to a person having ordinary skill in the art to which the claimed invention pertains. Patentability shall not be negated by the manner in which the invention was made.
10.
Claims 5 is rejected under 35 U.S.C. 103 as being unpatentable over US 2006/0059444 A] - hereinafter "Murthy", in view of US 2004/0187089 A1 - hereinafter "Schulz”.
With respect to claim 5, Murthy teaches, wherein the plurality of procedures includes a first procedure and a second procedure, - "The development tool may identify scenarios using the message diagrams.” [0039] 
Murthy does not explicitly teach the remaining limitations which, in analogous art for message processing, are taught by Schulz.
For example, Schulz teaches: when the second procedure is triggered while the first procedure is being performed, the second input data comprises information regarding performance of the first and second procedures, and the information regarding performance of the first and second procedures indicates...that the second procedure is available to be performed. - "In FIG. 44, a first workflow aspect is a chained enactment 4402, in which a workflow instance 4404 (first procedure) of workflow K 4406 enacted on workflow Engine A triggers the creation and enactment of a workflow instance 4408 (second procedure) of workflow L 4410 on Workflow Engine B, and, once enacted, both workflow instances carry on their operation (i.e., enact a taskApplication/Control Number: 15/694,060 Page 16 Art Unit: 2192 4412 and a task 4414) without further synchronisation.” [0330]; Fig. 44.
Thus, workflow instance 4408 would be available to be performed.
It would have been obvious for one of ordinary skill in the art before the effective filing date of the invention to implement Murthy with Schulz teachings because doing so would provide Murthy's system with the ability to facilitate compatibility between different workflows, as suggested by Schulz [0005-0006].
11.
Claims 16 and 20 are rejected under 35 U.S.C. 103 as being unpatentable over US 2006/0059444 A1 - hereinafter "Murthy", in view of US 8,266,224 B2 - hereinafter "Ramarao", and in view of US 5,832,239 - hereinafter "Gavin".
With respect to claim 16, Murthy teaches, A method of operating a procedure control framework in a software development platform, the method comprising: - "method" (Abstract). obtaining control data including information regarding a plurality of procedures defining a series of messages - "Development tool 48 generates interactor code (control data) for validating device under test 16 using the identified scenarios (procedures) at step 332." [0115]; Figs. 4B & 7. "As used herein, a scenario represents a particular order and combination of messages communicated between processes." [0039]; and information regarding relationships between the plurality of procedures; - "As discussed above, a long scenario may be chopped or divided into constituent parts according to the inputs in areas 146 and 148. Development tool 48 may separate a long scenario at the node (information regardingApplication/Control Number: 15/694,060 Page 17 Art Unit: 2192 relationships) identified in area 146. Furthermore, a chop link may be identified in area 148 to determine a minimum length of constituent scenarios (procedures)." [0084]; Fig. 4B. determining that a message is received; - ATM process 72 receives a Card_Inserted message [0061-0062]; Fig. 3B.
Murthy does not explicitly teach the following limitations which, in analogous art for message processing, are taught by Ramarao.
For example, Ramarao teaches: determining a type of the message as one of...a procedure trigger message; - "In step 706, the received message is classified to identify a particular workflow.” (col. 7:62-63; Fig. 7): performing a first operation when the type of the message is the procedure internal message or the arbitrary message; - Ramarao was mapped to the procedure trigger message option. performing a second operation when the type of the message is the procedure trigger message, wherein the second operation comprises: generating a first procedure using the control data; - "Based on the message classification, one of the rewritten work-flow data is selected from the database and applied to the received message at step 708. As a result, a destination application server for the message is identified at step 710, and an outgoing message (first procedure) is created at step 712. The outgoing message 712 may comprise a transformation of the transport, payload, or protocol(s) (control data) represented in the received message." (col. 8:15-21; Fig. 7)
It would have been obvious for one of ordinary skill in the art before the effective filing date of the invention to implement Murthy with Ramarao's teachings because doing so wouldApplication/Control Number: 15/694,060 Page 18 Art Unit: 2192 provide Murthy's system with the ability to optimize workflows, as suggested by Ramarao (col. 2:43-44).
Murthy and Ramarao do not explicitly teach determining a relationship between the first procedure and a second procedure in a run queue of the procedure control framework by using the control data; and performing a third operation according to the determined relationship.
However, in analogous art for message processing, Gavin teaches: "The put procedure and service routine include software routines for processing all STREAMS messages that transit its queue. Conventionally, to send messages between queues, a first put procedure in one queue calls (relationship) a second put procedure in an adjacent queue (run queue). As a result, the second put procedure receives the message from the adjacent queue and immediately processes (third operation) that message on its queue if resources are available. To do so, the put procedure first examines the message type (c.g., user data message, control information message) and then determines if it can handle the message." (col. 2:7-17)
It would have been obvious for one of ordinary skill in the art before the effective filing date of the invention to implement Murthy and Ramarao with Gavin's teachings because doing so would provide Murthy/Ramarao's system with the ability to generate a high performance communication path, as suggested by Gavin (col. 3:12-14).
With respect to claim 20, Ramarao was mapped to the procedure trigger message option.
12.
Claim 17 is rejected under 35 U.S.C. 103 as being unpatentable over US 2006/0059444 Al - hereinafter "Murthy", in view of US 8,266,224 B2 - hereinafter "Ramarao”, and in view ofApplication/Control Number: 15/694,060 Page 19 Art Unit: 2192 US 5,832,239 - hereinafter "Gavin", and in further view of US 2013/0055276 A1 - hereinafter "Park".
With respect to claim 17, Murthy, Ramarao and Gavin do not explicitly teach, wherein when the determined relationship indicates that the first procedure is to be performed after the second procedure is aborted, the third operation comprises: moving the second procedure from the run queue to an abort queue of the procedure control framework; and executing a procedure abort handler on all procedures in the abort queue.
However, in analogous art for message processing, Park teaches: "The component scheduling method may further include assigning, to a finish queue, at least one component (second procedure) that is completely executed using the execution queue, comparing a time period of the component assigned to the finish queue, with a delta time of a component (first procedure) assigned to the execution queue, and re-assigning, to the execution queue, the component assigned to the finish queue, based on a result of the comparing.” [0030]
It would have been obvious for one of ordinary skill in the art before the effective filing date of the invention to implement Murthy, Ramarao and Gavin with Park's teachings because doing so would provide Murthy/Ramarao/Gavin's system with the ability to facilitate the scheduling of tasks, as suggested by Park [0011].
13.
Claim 18 is rejected under 35 U.S.C. 103 as being unpatentable over US 2006/0059444 Al - hereinafter "Murthy", in view of US 8,266,224 B2 - hereinafter "Ramarao”, and in view ofApplication/Control Number: 15/694,060 Page 20 Art Unit: 2192 US 5,832,239 - hereinafter "Gavin", and in further view of US 6,584,488 B1 - hereinafter "Brenner".
With respect to claim 18, Murthy, Ramarao and Gavin do not explicitly teach, wherein when the determined relationship indicates that the first procedure is to be performed concurrently with the second procedure, the third operation comprises: performing a first node of the first procedure; and inserting the first procedure into the run queue.
However, in analogous art for message processing, Brenner teaches: "It is further understood that any number of threads (procedures) may be competing simultaneously for system resources and that each has a unique priority calculation which places it on varying levels in the execution queue."
It would have been obvious for one of ordinary skill in the art before the effective filing date of the invention to implement Murthy, Ramarao and Gavin with Brenner's teachings because doing so would provide Murthy/Ramarao/Gavin's system with an improved method and system for allocating resources among threads, as suggested by Brenner (col. 3:19-25).
14.
Claim 19 is rejected under 35 U.S.C. 103 as being unpatentable over US 2006/0059444 Al - hereinafter "Murthy", in view of US 8,266,224 B2 - hereinafter "Ramarao”, and in view of US 5,832,239 - hereinafter "Gavin", and in further view of US 9,535,627 B2 - hereinafter "Roberts".
With respect to claim 19, Murthy, Ramarao and Gavin do not explicitly teach,Application/Control Number: 15/694,060 Page 21 Art Unit: 2192 wherein when the determined relationship indicates that the first procedure is to be deferred until termination of the second procedure, the third operation comprises: inserting the first procedure into a defer queue of the procedure control framework.
However, in analogous art for message processing, Roberts teaches: "defer scheduling of the command to access the at least one volatile memory region or the at least one non-volatile memory region by moving the command from the first queue to one of multiple defer queue slots of the second queue based on the determined access priority of the command and access priorities of one or more other commands stored in one or more other command queue slots of the first queue scheduled to access the at least one volatile memory region or the at least one non-volatile memory region; return the command to the first queue;" (claim 1)
It would have been obvious for one of ordinary skill in the art before the effective filing date of the invention to implement Murthy, Ramarao and Gavin with Roberts' teachings because doing so would provide Murthy/Ramarao/Gavin's system with the ability to improve the access speed and energy consumption of memory, as suggested by Roberts (col. 1:14-18).
Conclusion 
15.
The prior art made of record and not relied upon is considered pertinent to applicant's disclosure.
16.
Any inquiry concerning this communication or earlier communications from the examiner should be directed to GEOFFREY R ST LEGER whose telephone number is (571)270- 7720.
The examiner can normally be reached on M-F (IFP) ~9:00-5:00 pm.Application/Control Number: 15/694,060 Page 22 Art Unit: 2192 Examiner interviews are available via telephone, in-person, and video conferencing using a USPTO supplied web-based collaboration tool.
To schedule an interview, applicant is encouraged to use the USPTO Automated Interview Request (AIR) at http://www.uspto.gov/interview practice.
If attempts to reach the examiner by telephone are unsuccessful, the examiner’s supervisor, Tuan Dam can be reached on 571-272-3695.
The fax phone number for the organization where this application or proceeding is assigned is 571-273-8300.
Information regarding the status of an application may be obtained from the Patent Application Information Retrieval (PAIR) system.
Status information for published applications may be obtained from either Private PAIR or Public PAIR.
Status information for unpublished applications is available through Private PAIR only.
For more information about the PAIR system, see http://pair-direct.uspto.gov.
Should you have questions on access to the Private PAIR system, contact the Electronic Business Center (EBC) at 866-217-9197 (toll-free).
If you would like assistance from a USPTO Customer Service Representative or access to the automated information system, call 800-786-9199 (IN USA OR CANADA) or 571-272-1000.
/GEOFFREY R ST LEGER/
Primary Examiner, Art Unit 2192

